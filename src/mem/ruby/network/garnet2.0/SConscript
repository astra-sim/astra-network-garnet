# -*- mode:python -*-

# Copyright (c) 2016 Georgia Institute of Technology
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Tushar Krishna

Import('*')

if env['PROTOCOL'] == 'None':
    Return()

SimObject('GarnetLink.py')
SimObject('GarnetNetwork.py')

Source('GarnetLink.cc')
Source('GarnetNetwork.cc')
Source('InputUnit.cc')
Source('NetworkInterface.cc')
Source('NetworkLink.cc')
Source('OutVcState.cc')
Source('OutputUnit.cc')
Source('Router.cc')
Source('RoutingUnit.cc')
Source('SwitchAllocator.cc')
Source('CrossbarSwitch.cc')
Source('VirtualChannel.cc')
Source('flitBuffer.cc')
Source('flit.cc')
Source('Credit.cc')
Source('CLIP.cc')
Source('astra-sim/system/LogGP.cc')
Source('astra-sim/system/BasicEventHandlerData.cc')
Source('astra-sim/system/MyPacket.cc')
Source('astra-sim/system/SimSendCaller.cc')
Source('astra-sim/system/DataSet.cc')
Source('astra-sim/system/QueueLevels.cc')
Source('astra-sim/system/RendezvousSendData.cc')
Source('astra-sim/system/Sys.cc')
Source('astra-sim/system/MemBus.cc')
Source('astra-sim/system/NetworkStat.cc')
Source('astra-sim/system/StatData.cc')
Source('astra-sim/system/DMA_Request.cc')
Source('astra-sim/system/SharedBusStat.cc')
Source('astra-sim/system/MemMovRequest.cc')
Source('astra-sim/system/PacketBundle.cc')
Source('astra-sim/system/RecvPacketEventHadndlerData.cc')
Source('astra-sim/system/StreamBaseline.cc')
Source('astra-sim/system/BaseStream.cc')
Source('astra-sim/system/CollectivePhase.cc')
Source('astra-sim/system/IntData.cc')
Source('astra-sim/system/SimRecvCaller.cc')
Source('astra-sim/system/QueueLevelHandler.cc')
Source('astra-sim/system/RendezvousRecvData.cc')
Source('astra-sim/system/StreamStat.cc')
Source('astra-sim/system/collective/Algorithm.cc')
Source('astra-sim/system/collective/AllToAll.cc')
Source('astra-sim/system/collective/DoubleBinaryTreeAllReduce.cc')
Source('astra-sim/system/collective/Ring.cc')
Source('astra-sim/system/topology/BinaryTree.cc')
Source('astra-sim/system/topology/LocalRingNodeA2AGlobalDBT.cc')
Source('astra-sim/system/topology/RingTopology.cc')
Source('astra-sim/system/topology/BasicLogicalTopology.cc')
Source('astra-sim/system/topology/LocalRingGlobalBinaryTree.cc')
Source('astra-sim/system/topology/Node.cc')
Source('astra-sim/system/topology/ComplexLogicalTopology.cc')
Source('astra-sim/system/topology/DoubleBinaryTreeTopology.cc')
Source('astra-sim/system/topology/LogicalTopology.cc')
Source('astra-sim/system/topology/Torus3D.cc')
Source('astra-sim/system/memory/SimpleMemory.cc')
Source('astra-sim/workload/CSVWriter.cc')
Source('astra-sim/workload/Layer.cc')
Source('astra-sim/workload/Workload.cc')
